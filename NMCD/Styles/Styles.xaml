<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--Btn style-->
    <Style x:Key="BtnApp" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource LightBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryBrushHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ExpanderApp" TargetType="Expander" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <DockPanel >
                            <!-- Header with arrow icon on the right -->
                            <ToggleButton DockPanel.Dock="Top" 
                                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded}" 
                                              Template="{DynamicResource ExpanderToggleButtonTemplate}">
                                <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="Left" 
                                                      Margin="4"/>
                            </ToggleButton>
                            <!-- Content -->
                            <ContentPresenter x:Name="ExpandSite" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  Margin="{TemplateBinding Padding}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButtonTemplate" TargetType="ToggleButton">
        <Grid x:Name="Header" Background="{DynamicResource PrimaryBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="0"
                                  VerticalAlignment="Center" 
                                  Margin="4,0,0,0"/>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Border BorderThickness="0.5" BorderBrush="{DynamicResource LightBrushHover}" Margin="5"/>
                <TextBlock x:Name="IconHeader" VerticalAlignment="Center" Margin="0 5 5 5"
                            FontFamily="Segoe MDL2 Assets" Text="&#xE710;" FontSize="10"
                           Foreground="{DynamicResource LightBrush}"
                           FontWeight="Thin"/>
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="IconHeader" Property="TextBlock.Text">
                    <Setter.Value>
                        &#xE738;
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Header" Property="Grid.Background">
                    <Setter.Value>
                        #175abe
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
</ResourceDictionary>